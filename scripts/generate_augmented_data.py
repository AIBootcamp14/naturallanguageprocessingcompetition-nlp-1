import random
from pathlib import Path
import polars as pl
import numpy as np
import re

random.seed(42)
np.random.seed(42)

needed = {
    '환경': 134,
    '스포츠': 141,
    '정치/정부': 157,
    '종교/신념': 162,
    '과학/기술': 213,
    '쇼핑/소매': 202,
}

pattern_hangul = re.compile('[가-힣]')


def sample_lines(options, count):
    if len(options) >= count:
        return random.sample(options, count)
    result = []
    while len(result) < count:
        result.extend(random.sample(options, min(len(options), count - len(result))))
    return result[:count]


def assemble_dialogue(lines):
    return '\n'.join(f"#Person{1 if i % 2 == 0 else 2}#: {text}" for i, text in enumerate(lines))


def ensure(text):
    if not pattern_hangul.search(text):
        raise ValueError('Text without Hangul encountered')


environment = {
    'openings': [
        '환경 축제 신청했어? 새벽에 모여 공원 돌며 플라스틱과 유리병을 따로 주운대.',
        '기후 행동 캠페인 참여할래? 쓰레기 수거와 체험 부스를 동시에 진행한다더라.',
    ],
    'line_options': [
        '생분해 봉투와 장갑이 제공되고, 분리한 쓰레기는 업사이클 전시로 활용된대.',
        '기후 강연에서 폭우 통계를 설명해 주고, 실천 체크리스트도 나눠 준대.',
        '참석자는 리필 스테이션 투어와 카페 할인 쿠폰을 받을 수 있대.',
        '플로깅 기록을 앱에 올리면 기념 배지와 실천 스티커를 보내 준대.',
        '아이들과 함께 오면 환경 그림 그리기 프로그램도 참여할 수 있어.',
        '참가비는 무료지만 사전 신청이 필요해서 빨리 등록해야 한대.',
        '행사 끝나면 자전거 대여소를 소개하면서 친환경 교통 팁을 알려 준대.',
    ],
    'extras': [
        '행사본부에서 일회용품 사용을 줄이는 방법도 안내한다더라.',
        '활동 결과는 시청 환경 홈페이지에 그래프로 공개된대.',
        '참여팀별 데이터를 비교해 내년 계획에 반영한다더라.',
    ],
    'closings': [
        '후기를 블로그에 정리해 다른 주민에게 참여 방법을 알려 주자.',
        '한 달간 실천 기록을 모아 다음 캠페인 회의자료로 제출하자.',
    ],
    'summaries': [
        '#Person1#과 #Person2#는 환경 축제에 참여해 플로깅과 기후 강연을 듣고, 실천 기록을 주변에 공유하기로 한다.',
        '#Person1#과 #Person2#는 기후 행동 캠페인에서 업사이클 전시와 자전거 실천 안내를 체험한 뒤 후기를 남기기로 한다.',
    ],
}

sports = {
    'openings': [
        '주말에 야구장 응원 가볼래? 응원가와 동작을 미리 연습해 놨어.',
        '다음 달 러닝 대회 준비 중이야. 매일 저녁 조깅으로 심박수를 기록하고 있어.',
    ],
    'line_options': [
        '경기장에서는 응원 타월을 나눠 주고, 팬사인회 추첨도 진행된대.',
        '완주하면 메달과 기록증을 받으니 목표 시간을 정해두자.',
        '새 운동화는 보호 패치를 붙여야 물집이 덜 생긴대.',
        '동호회 톡방에서 좌석 배치표와 응원 가사를 공유해 줬어.',
        '보급소마다 물과 이온 음료가 준비되고, 응급 처치 부스도 있대.',
        '실내 클라이밍장은 안전 교육 후에 초보 코스로 연습할 수 있대.',
    ],
    'extras': [
        '경기장 주변 푸드트럭에서 간단히 간식을 먹자는 계획도 세웠어.',
        '훈련 기록을 앱에 올리면 단체 순위가 업데이트된대.',
        '심박수 데이터를 이용해 회복 속도를 분석해 보자.',
    ],
    'closings': [
        '운동 후에는 스트레칭과 단백질 보충을 하고 기록을 앱에 남기자.',
        '경기 사진을 SNS에 올려 추첨 이벤트에도 참여해 보자.',
    ],
    'summaries': [
        '#Person1#과 #Person2#는 야구 직관과 러닝 대회를 준비하며 응원 도구와 회복 루틴까지 세심하게 맞추기로 한다.',
        '#Person1#과 #Person2#는 실내 스포츠 체험을 예약해 안전 교육과 훈련 기록을 계획하고, 경기 후 회복 루틴을 공유하기로 한다.',
    ],
}

politics = {
    'openings': [
        '주민 공청회 자료 읽어봤어? 복지 예산이 줄어서 질문을 준비해야 할 것 같아.',
        '정책 간담회 신청했니? 청년 지원안이 바뀐다길래 의견서를 작성 중이야.',
    ],
    'line_options': [
        '발언 시간은 3분이라 핵심을 압축해야 하고, 자료는 공동 문서로 정리하자.',
        '회의는 온라인 생중계도 제공되니 채팅 의견을 따로 모아야 한대.',
        '구청장 면담 요청 서명을 모으려면 QR 코드를 돌려야 효과적이래.',
        '자료집은 PDF로 배포되니까 태블릿으로 하이라이트 표시하자.',
        '예산 삭감 사례를 지도와 사진으로 준비하면 공감대가 커진대.',
        '회의가 끝나면 의원실과 간단한 간담회를 추진해 보자.',
    ],
    'extras': [
        '발언 영상은 SNS에 공유해서 더 많은 주민 의견을 모을 수 있대.',
        '시민단체와 협력하면 요구안에 힘이 실린다더라.',
        '의견을 표로 정리해 다음 회의 전에 전송하자.',
    ],
    'closings': [
        '발언 영상과 회의록을 SNS에 공유해서 주민 의견을 더 모아 보자.',
        '요구안을 도표로 정리해 다음 회의 전에 의원실에 전달하자.',
    ],
    'summaries': [
        '#Person1#과 #Person2#는 주민 공청회에서 복지 예산 축소 문제를 다루기 위해 발언과 서명 자료를 준비한다.',
        '#Person1#과 #Person2#는 정책 간담회에서 청년 지원안을 질문하고, 자료를 공유해 면담을 추진하기로 한다.',
    ],
}

religion = {
    'openings': [
        '종교 간 문화 축제 일정 봤어? 기도 음악과 전통 음식을 체험할 수 있대.',
        '침묵 명상 리트릿 신청했어? 걷기 명상과 일기 쓰기를 하루 동안 진행한대.',
    ],
    'line_options': [
        '봉사 스태프로 신청하면 안내와 통역을 맡을 수 있고, 기부금도 전달된대.',
        '다문화 가정과 신앙 경험을 나누는 시간이 준비되어 있대.',
        '무료 급식 봉사는 도시락 포장과 감사 기도를 함께 진행한대.',
        '성경 공부 모임은 산상수훈을 읽고 실천 방법을 이야기한대.',
        '종교 자유 강연은 국내외 판례를 비교하고 배려 사례를 안내한대.',
        '체험 후 온라인 자료와 참여 링크를 모두에게 공유한대.',
    ],
    'extras': [
        '행사 후에는 경험을 나누는 소모임이 열릴 예정이래.',
        '봉사 사진은 커뮤니티 게시판에 업로드될 거래.',
        '기록을 정리해 차기 준비팀에 전달하자.',
    ],
    'closings': [
        '체험 후기는 블로그와 모임 게시판에 정리해서 공유하자.',
        '느낀 점을 모아 다음 행사 준비팀에 개선 의견으로 전달하자.',
    ],
    'summaries': [
        '#Person1#과 #Person2#는 종교 간 문화 축제와 명상 리트릿에서 봉사와 체험을 진행하고, 후기를 공유하기로 한다.',
        '#Person1#과 #Person2#는 무료 급식 봉사와 강연에 참여해 배려 사례를 배우고, 기록을 다음 행사에 전달하기로 한다.',
    ],
}

science = {
    'openings': [
        '로봇 공모전 준비 어떻게 돼? 센서 데이터를 모으고 시연 영상도 촬영해야 해.',
        'AI 윤리 워크숍 자료 읽어봤어? 편향 사례와 익명화 실습이 자세하더라.',
        '사물인터넷 프로젝트 진행 중이야. 공기질 모니터링 시스템을 만들려고 해.',
    ],
    'line_options': [
        '시연 영상은 드론으로 촬영하고 발표 자료는 인포그래픽 중심으로 만들자.',
        '클라우드 크레딧 지원 프로그램을 신청하면 비용을 줄일 수 있대.',
        '익명화 실습에서 가명 처리와 노이즈 주입을 비교 분석한대.',
        '회의록은 깃허브에 올리고 코드와 SQL 쿼리를 함께 정리하자.',
        '테스트베드 대여 일정과 예산을 문서로 작성해야 한대.',
        '과학관 전시에서는 VR로 화성 탐사를 체험하고 설문에 참여할 수 있대.',
    ],
    'extras': [
        '발표 후에는 멘토 피드백을 받아 다음 프로젝트에 반영하자.',
        '오픈소스 라이브러리를 활용한 기록도 정리해 두자.',
        '주간 보고서를 작성해 팀원과 공유하자.',
    ],
    'closings': [
        '회의 내용을 문서로 정리해 팀원에게 공유하고 일정표를 업데이트하자.',
        '발표 영상을 커뮤니티에 올리고 설문 피드백을 분석하자.',
    ],
    'summaries': [
        '#Person1#과 #Person2#는 로봇 공모전과 AI 윤리 워크숍을 준비하며 시연, 익명화 실습, 클라우드 신청을 체계적으로 정리하기로 한다.',
        '#Person1#과 #Person2#는 사물인터넷 프로젝트와 과학관 체험을 병행하며 회의록을 공유하고 피드백 설문을 분석하기로 한다.',
    ],
}

shopping = {
    'openings': [
        '제로웨이스트 가게 가봤어? 리필 스테이션에서 세제와 샴푸를 덜어 살 수 있대.',
        '지역 소상공인 장터가 이번 주말에 열린대. 지역 화폐를 쓰면 캐시백이 있다더라.',
        '친환경 패션 쇼케이스 초대받았어. 업사이클 원단 이야기를 들을 수 있대.',
    ],
    'line_options': [
        '라이브 커머스 방송에서는 지역 농산물을 특가로 판매하고 이벤트도 진행한대.',
        '리퍼브 가전 매장은 전시품을 정가보다 30% 저렴하게 팔고 1년 보증을 제공한대.',
        '구매 영수증을 모아 지역 소비 통계에 제출하면 다음 행사 정보를 먼저 받는대.',
        'SNS에 인증 사진을 올리면 적립금과 친환경 굿즈를 준대.',
        '포장재 재활용 팁을 시연하며 업사이클 작가가 노하우를 알려 준대.',
        '카드뉴스로 지속 가능한 소비 사례를 만들어 커뮤니티에 공유하자.',
    ],
    'extras': [
        '행사 소식은 메신저로 친구들에게도 전달하자.',
        '영수증은 재활용 노트에 붙이고 다음 방문 계획을 세우자.',
        '인증 후기는 블로그에 올려 다른 사람에게 정보를 주자.',
    ],
    'closings': [
        '후기를 온라인에 공유해 다른 사람도 참여하게 하고, 다음 기회에 같이 가자.',
        '소비 데이터를 정리해 지속 가능한 소비 보고서로 만들어 보자.',
    ],
    'summaries': [
        '#Person1#과 #Person2#는 제로웨이스트 가게와 장터를 방문해 리필, 캐시백, 리뷰 이벤트를 활용하고 후기를 공유하기로 한다.',
        '#Person1#과 #Person2#는 친환경 쇼케이스와 라이브 커머스를 체험해 소비 데이터를 정리하고 정보를 카드뉴스로 나누기로 한다.',
    ],
}

configs = {
    '환경': environment,
    '스포츠': sports,
    '정치/정부': politics,
    '종교/신념': religion,
    '과학/기술': science,
    '쇼핑/소매': shopping,
}

records = []
for domain, count in needed.items():
    cfg = configs[domain]
    for idx in range(count):
        lines = [random.choice(cfg['openings'])]
        lines.extend(sample_lines(cfg['line_options'], 4))
        lines.append(random.choice(cfg['extras']))
        lines.append(random.choice(cfg['closings']))
        dialogue = assemble_dialogue(lines)
        summary = random.choice(cfg['summaries'])
        ensure(dialogue)
        ensure(summary)
        records.append({
            'fname': f"augment_{domain}_{idx+1:04d}",
            'dialogue': dialogue,
            'summary': summary,
            'topic': f"{domain} 증강 대화 {idx+1:03d}",
            'cluster_id': -1,
            'adjusted_label': domain,
            'subcluster': None,
            'subcluster_label': None,
        })

pl.DataFrame(records).write_csv('data/train_augmentation_origin.csv')
print('Generated', len(records), 'rows -> data/train_augmentation_origin.csv')
